name: Build, Test & Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-pack-publish:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x
            6.0.x
            3.1.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal || echo "No tests found, skipping."

      - name: Set version
        id: vars
        run: echo "version=1.0.${{ github.run_number }}" >> $env:GITHUB_OUTPUT

      - name: Pack ToggleNet.Core
        run: dotnet pack src/ToggleNet.Core/ToggleNet.Core.csproj --configuration Release --no-build --output ./nupkgs /p:Version=${{ steps.vars.outputs.version }}

      - name: Pack ToggleNet.EntityFrameworkCore
        run: dotnet pack src/ToggleNet.EntityFrameworkCore/ToggleNet.EntityFrameworkCore.csproj --configuration Release --no-build --output ./nupkgs /p:Version=${{ steps.vars.outputs.version }}

      - name: Pack ToggleNet.Dashboard
        run: dotnet pack src/ToggleNet.Dashboard/ToggleNet.Dashboard.csproj --configuration Release --no-build --output ./nupkgs /p:Version=${{ steps.vars.outputs.version }}

      - name: List nupkgs directory contents
        run: |
          echo "Listing contents of ./nupkgs:"
          dir ./nupkgs

      - name: Publish to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          echo "Publishing all packages in ./nupkgs"
          Get-ChildItem ./nupkgs/*.nupkg | ForEach-Object {
            dotnet nuget push $_.FullName --api-key $env:NUGET_API_KEY --source https://api.nuget.org/v3/index.json --skip-duplicate
          }

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.vars.outputs.version }}
          release_name: Release v${{ steps.vars.outputs.version }}
          body: |
            ## What's Changed
            - ToggleNet.Core v${{ steps.vars.outputs.version }}
            - ToggleNet.EntityFrameworkCore v${{ steps.vars.outputs.version }}
            - ToggleNet.Dashboard v${{ steps.vars.outputs.version }}
            
            Published to NuGet: https://www.nuget.org/packages
          draft: false
          prerelease: false

      - name: Upload Release Assets
        run: |
          $release_id = "${{ steps.create_release.outputs.id }}"
          Get-ChildItem ./nupkgs/*.nupkg | ForEach-Object {
            $asset_name = $_.Name
            $asset_path = $_.FullName
            echo "Uploading $asset_name"
            curl -X POST `
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" `
              -H "Content-Type: application/octet-stream" `
              --data-binary "@$asset_path" `
              "https://uploads.github.com/repos/${{ github.repository }}/releases/$release_id/assets?name=$asset_name"
          }
